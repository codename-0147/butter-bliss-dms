/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.MySQL;
import model.Utility;
import net.glxn.qrgen.core.image.ImageType;
import com.formdev.flatlaf.FlatLightLaf;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Oshadha
 */
public class ViewQr extends javax.swing.JFrame {

    /**
     * Creates new form ViewQr
     */
    public ViewQr() {
        initComponents();
        ShowData();
       // loadEmployee();
    }
    
    private void ShowData() {
    try {
        ResultSet resultSet = MySQL.executeSearch(
            "SELECT id, email FROM employee"
        );

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing rows

        while (resultSet.next()) {
            // Create a vector to store row data
            Vector<String> vector = new Vector<>();

            // Add each column value to the vector
            vector.add(resultSet.getString("id"));

            vector.add(resultSet.getString("email"));


            // Add the vector as a new row to the table model
            model.addRow(vector);
        }

    } catch (Exception e) {
        // Display error message and log the exception
        JOptionPane.showMessageDialog(this, "Error fetching data: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}
private BufferedImage generateQRCode(String data) {
    QRCodeWriter qrCodeWriter = new QRCodeWriter();
    int width = 300;
    int height = 300;
    BufferedImage qrImage = null;

    try {
        BitMatrix bitMatrix = qrCodeWriter.encode(data, BarcodeFormat.QR_CODE, width, height);
        qrImage = MatrixToImageWriter.toBufferedImage(bitMatrix);  // Store the QR image

        // Display the QR Code in the JLabel
        jLabel1.setIcon(new ImageIcon(qrImage));

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error generating QR Code: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    return qrImage;
}
    
//      private void loadEmployee() {
//
//        try {
//
//            ResultSet resultSet = MySQL.executeSearch("SELECT * FROM `employee`");
//
//            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//            model.setRowCount(0);
//
//            while (resultSet.next()) {
//
//                Vector<String> vector = new Vector<>();
//                vector.add(resultSet.getString("email"));
//            
//
//                model.addRow(vector);
//                
//               }
//            
//            } catch (Exception e) {
//            e.printStackTrace();
//        }
//   } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        lblImage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(245, 219, 200));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 340, 280));

        jInternalFrame1.setVisible(true);

        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
        );

        jPanel1.add(jInternalFrame1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, -1, 290));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setText("View QR");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 340, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        /*  int index = jTable1.getSelectedRow();
          TableModel model =jTable1.getModel();
          String name = model.getValueAt(index, 0).toString();
          ImageIcon icon = new ImageIcon(Utility.getPath("qrCodes"+File.separator+name));
          Image image = icon.getImage().getSelectedInstance(294, 254, Image.SCALE_SMOOTH);
          ImageIcon resizedIcon = new  ImageIcon(image);
          
          lblImage.setIcon(resizedIcon);
          */
//int index = jTable1.getSelectedRow();
//TableModel model = jTable1.getModel();
//String name = model.getValueAt(index, 0).toString();
//ImageIcon icon = new ImageIcon(Utility.getPath("qrCodes" + File.separator + name));
//Image image = icon.getImage().getScaledInstance(294, 254, Image.SCALE_SMOOTH);
//ImageIcon resizedIcon = new ImageIcon(image);
//
//lblImage.setIcon(resizedIcon);

//   int selectedRow = jTable1.getSelectedRow();
//        if (selectedRow != -1) {
//            String id = (String) jTable1.getValueAt(selectedRow, 0);
//            String name = (String) jTable1.getValueAt(selectedRow, 1);
//            String nic = (String) jTable1.getValueAt(selectedRow, 2);
//            String email = (String) jTable1.getValueAt(selectedRow, 3);
//            String mobile = (String) jTable1.getValueAt(selectedRow, 4);
//            String jobTitle = (String) jTable1.getValueAt(selectedRow, 5);
//
//            // Prepare data for QR Code
//            String data = "ID: " + id + "\nName: " + name + "\nNIC: " + nic + "\nEmail: " + email + "\nMobile: " + mobile + "\nJob Title: " + jobTitle;
//
//            // Display or process selected row data
//            generateQRCode(data);
//        } else {
//            JOptionPane.showMessageDialog(this, "Please select a row.");
//        }
//
//    }
//
//    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
//    int selectedRow = jTable1.getSelectedRow();
//    if (selectedRow != -1) {
//        String id = (String) jTable1.getValueAt(selectedRow, 0);
//
//        String email = (String) jTable1.getValueAt(selectedRow, 1);
//
//
//        // Prepare data for QR Code
//        String data = "ID: " + id +  "\nEmail: " + email ;
//
//        // Display or process selected row data
//        generateQRCode(data);
//    } else {
//        JOptionPane.showMessageDialog(this, "Please select a row.");
//    }


    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        String id = (String) jTable1.getValueAt(selectedRow, 0);

        String email = (String) jTable1.getValueAt(selectedRow, 1);


        // Prepare data for QR Code
        String data = "ID: " + id +  "\nEmail: " + email ;

        // Display or process selected row data
        generateQRCode(data);
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row.");
    }


    
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void lblImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseClicked
        /*     JFileChooser fileChooser = new  JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            try {
                originalImage = ImageIO.read(selectedFile);

                int originalWidth = originalImage.getWidth();
                int originalHeight = originalImage.getHeight();

                int labelWidth = lblImage.getWidth();
                int labelHeight = lblImage.getHeight();

                double scaleX = (double) labelWidth/originalWidth;
                double scaleY = (double) labelHeight/originalHeight;

                double scale = Math.min(scaleX, scaleY);

                int scaledWidth = (int) (originalWidth * scale);
                int scaledHeight = (int) (originalHeight * scale);

                Image scaledImage = originalImage.getScaledInstance(scaledWidth, scaledHeight, Image.SCALE_SMOOTH);

                ImageIcon icon = new ImageIcon(scaledImage);
                lblImage.setIcon(icon);

            } catch (Exception e) {
                e.printStackTrace();
            }

        }*/
        
        

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            String id = (String) jTable1.getValueAt(selectedRow, 0);
            String name = (String) jTable1.getValueAt(selectedRow, 1);
            String nic = (String) jTable1.getValueAt(selectedRow, 2);
            String email = (String) jTable1.getValueAt(selectedRow, 3);
            String mobile = (String) jTable1.getValueAt(selectedRow, 4);
            String jobTitle = (String) jTable1.getValueAt(selectedRow, 5);

            // Prepare data for QR Code
            String data = "ID: " + id + "\nName: " + name + "\nNIC: " + nic + "\nEmail: " + email + "\nMobile: " + mobile + "\nJob Title: " + jobTitle;

            // Display or process selected row data
            generateQRCode(data);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row.");
        }

    

    }//GEN-LAST:event_lblImageMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewQr().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblImage;
    // End of variables declaration//GEN-END:variables
}
