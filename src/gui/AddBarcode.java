package gui;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import model.MySQL;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author chath
 */
public class AddBarcode extends javax.swing.JDialog {

    private HashMap<String, String> cityMap = new HashMap<>();
    private String stockID;
    private String stockBarcode;
    private static final Random random = new Random();
    private static final String ALPHANUMERIC = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

    /**
     * Creates new form Stock_Status
     */
    public AddBarcode(java.awt.Frame parent, boolean modal, String stockID, String stockBarcode) {
        super(parent, modal);
        initComponents();
        stockIDLabel.setText(stockID);
        barcodeField.setText(stockBarcode);
        this.stockID = stockID;
        this.stockBarcode = stockBarcode;
        String barcodeFieldText = barcodeField.getText();
        
        if (barcodeFieldText.equals("Pending")) {
            generateButton.setEnabled(true);
        }else {
            generateButton.setEnabled(false);
        }
    }
    
 private void generateBarcode() {

        String timestampPart = String.valueOf(System.currentTimeMillis()).substring(5);
  
        StringBuilder randomSuffix = new StringBuilder(4);
        for (int i = 0; i < 4; i++) {
            randomSuffix.append(ALPHANUMERIC.charAt(random.nextInt(ALPHANUMERIC.length())));
        }

        String barcode = timestampPart + randomSuffix;
        barcodeField.setText(barcode);
    }
    
    private void exportBarcode(String barcodeText) throws Exception {
     
        String appDir = new File("").getAbsolutePath();
       
        String barcodesFolder = appDir + File.separator + "ExportedBarcodes";
        File mainDirectory = new File(barcodesFolder);
        
        if (!mainDirectory.exists()) {
            mainDirectory.mkdirs();
        }
     
        String fileName = "barcode-" + barcodeText + "_stock-" + stockID + ".png";
        Path filePath = FileSystems.getDefault().getPath(barcodesFolder, fileName);

        BarcodeFormat barcodeFormat = BarcodeFormat.CODE_128;
        int width = 300;
        int height = 100;

        BitMatrix bitMatrix = new MultiFormatWriter().encode(barcodeText, barcodeFormat, width, height);
        
        BufferedImage barcodeImage = MatrixToImageWriter.toBufferedImage(bitMatrix);
        
        int textHeight = 20;
        BufferedImage combinedImage = new BufferedImage(width, height + textHeight, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g = combinedImage.createGraphics();
        
        g.drawImage(barcodeImage, 0, 0, null);
        
        g.setColor(Color.BLACK);
        g.setFont(new Font("Arial", Font.PLAIN, 14));
        
        FontMetrics fontMetrics = g.getFontMetrics();
        int textWidth = fontMetrics.stringWidth(barcodeText);
        int x = (width - textWidth) / 2;
        int y = height + textHeight - 5;  
        
        g.drawString(barcodeText, x, y);
        g.dispose();
  
        ImageIO.write(combinedImage, "PNG", filePath.toFile());

        JOptionPane.showMessageDialog(null, "Barcode exported as PNG to: " + filePath);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        stockIDLabel = new javax.swing.JLabel();
        barcodeField = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Add Barcode");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Stock ID");

        stockIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        stockIDLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stockIDLabel.setText("STOCK ID HERE ");
        stockIDLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        generateButton.setBackground(new java.awt.Color(245, 219, 200));
        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(245, 219, 200));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        exportButton.setBackground(new java.awt.Color(245, 219, 200));
        exportButton.setText("Export");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Barcode");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(stockIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                .addComponent(barcodeField)))))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(stockIDLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(generateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed

        generateBarcode();
        generateButton.setEnabled(true);

    }//GEN-LAST:event_generateButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
       String barcode = barcodeField.getText();
        
        if (barcode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please generate a barcode to add", "Warning", JOptionPane.WARNING_MESSAGE);
        }else {
            try {
                ResultSet resultSet = MySQL.executeSearch("SELECT * FROM `stock` "
                        + "WHERE `id` = '"+stockID+"' AND `barcode` = '"+barcode+"'");
                
                if (resultSet.next()) {
                    JOptionPane.showMessageDialog(this, "A stock with this barcode already exists "
                            + "or a barcode is already added", "Warning", JOptionPane.WARNING_MESSAGE);
                }else {
                    MySQL.executeIUD("UPDATE `stock` SET `barcode` = '"+barcode+"' WHERE `id` = '"+stockID+"'");
                    JOptionPane.showMessageDialog(this, "Barcode added successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                    //Home.productsNStock.loadStock();
                
                        
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
     String barcode = barcodeField.getText();
        
        if (barcode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please generate a barcode to export", "Warning", JOptionPane.WARNING_MESSAGE);
        }else {
            try {
                exportBarcode(barcode);
                 this.dispose(); 
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField barcodeField;
    private javax.swing.JButton exportButton;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel stockIDLabel;
    // End of variables declaration//GEN-END:variables
}
